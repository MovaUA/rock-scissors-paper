syntax = "proto3";

package rps;
option go_package = "module github.com/movaua/rock-paper-scissors/pkg/rps";

import "google/protobuf/empty.proto";

// Game is Rock-Paper-Scissors game service.
service Game {
  // Connect connects a player to the game.
  // Request Player must have Name set (Id is ignored).
  // Response Player is assigned Id.
  rpc Connect(Player) returns (Player) {}

  // Players streams all connected players,
  // and all players which connect later.
  rpc Players(google.protobuf.Empty) returns (stream Player) {}

  // Start starts the game.
  rpc Start(stream Choice) returns (stream Score) {}
}

// Player decribes a player.
message Player {
  // Id is player ID.
  string id = 1;

  // Name is play name.
  string name = 2;
}

// Choice is what a player chose.
message Choice {
  // Choice is a player choice.
  EnumChoice choice = 1;
  // Player who made a choice.
  string player_id = 2;
}

// EnumChoice is possible choice a player can make.
enum EnumChoice {
  // Unknow choice means a play did not make a choice in time.
  UnknownChoice = 0;
  Rock = 1;
  Paper = 2;
  Scissors = 3;
}

// EnumStatus is a player's result of a round or a game.
enum EnumStatus {
  UnknownStatus = 0;
  Winner = 1;
  Looser = 2;
  Draw = 3;
}

// Score reports the latest round results and the current results of the game.
message Score {
  repeated RoundResult round_results = 1;
  repeated GameResult game_results = 2;
}

// RoundResult is the latest round result of the player.
message RoundResult {
  // Player identifies the player who made the choice.
  Player player = 1;

  // Choice is the player choice.
  EnumChoice choice = 2;

  // Score is a number of points the player got in the round.
  int32 score = 3;

  // Status is the result of player choice.
  EnumStatus status = 4;
}

// GameResult is the current game result of the player.
message GameResult {
  // Player identifies the player for which the result is for.
  Player player = 1;

  // Score is a total number of points the player has got in the game so far.
  int32 score = 2;

  // Status is the current game status of the player.
  EnumStatus status = 3;

  // Rounds is the number of completed rounds in the game.
  int32 rounds = 4;
}
